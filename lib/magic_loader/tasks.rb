require 'magic_loader'
require 'rake/tasklib'

class MagicLoader::Task < Rake::TaskLib
  BEGIN_MAGIC = "#-----BEGIN MAGICLOADER MAGIC BLOCK-----"
  END_MAGIC   = "#------END MAGICLOADER MAGIC BLOCK------"
  MAGIC_WARNING = [
    "# Automagically generated by MagicLoader. Editing may",
    "# result in bad juju. Edit at your own risk!"
  ]
  
  def initialize(*paths)
    options = paths.last.is_a?(Hash) ? paths.pop : {}
    
    task :magicload do
      load_order = MagicLoader.require_all(*paths)
      strip_paths!(load_order, options[:strip]) if options[:strip]

      magicload_block = [
        BEGIN_MAGIC,
        MAGIC_WARNING,
        load_order.map { |t| "require #{t.dump}" },
        END_MAGIC
      ].flatten.join("\n")
      
      unless options[:target]
        puts magicload_block
      end
    end
  end
  
  def strip_paths!(paths, to_strip)
    paths.map! do |path|
      case to_strip
      when String
        if path.index(to_strip) == 0
          path.sub to_strip, ''
        else
          path
        end
      when Regexp
        path.sub to_strip, ''
      else
        path
      end
    end
  end
end