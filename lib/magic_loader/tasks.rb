require 'magic_loader'
require 'rake/tasklib'

class MagicLoader::Task < Rake::TaskLib
  BEGIN_MAGIC = "#-----BEGIN MAGICLOADER MAGIC BLOCK-----"
  END_MAGIC   = "#------END MAGICLOADER MAGIC BLOCK------"
  MAGIC_WARNING = [
    "# Automagically generated by MagicLoader. Editing may",
    "# result in bad juju. Edit at your own risk!"
  ]
  
  def initialize(*paths)
    options = paths.last.is_a?(Hash) ? paths.pop : {}
    
    task :magicload do
      load_order = MagicLoader.require_all(*paths)
      
      if options[:strip]
        load_order.map! do |path|
          case options[:strip]
          when String
            if path.index(options[:strip]) == 0
              path.sub options[:strip], ''
            else
              path
            end
          when Regexp
            path.sub options[:strip], ''
          else
            path
          end
        end
      end
      
      magicload_block = [
        BEGIN_MAGIC,
        MAGIC_WARNING,
        load_order.map { |t| "require #{t.dump}" },
        END_MAGIC
      ].flatten.join("\n")
      
      puts magicload_block
    end
  end
end